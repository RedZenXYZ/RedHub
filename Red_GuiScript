function RedGui(ThemeBackground)
	local Themes = {
		["red"] = {
			["Drag"] = Color3.new(0, 0, 0),
			["DragBorder"] = Color3.new(0, 0, 0),
			["Frame"] = Color3.new(1, 0, 0),
			["FrameBorder"] = Color3.new(0, 0, 0),
			["Text"] = Color3.new(1, 1, 1),
			["Close"] = Color3.new(0, 0, 0)
		}
	}
	
	if ThemeBackground ~= nil and table.find(Themes, ThemeBackground:lower()) then
		ThemeColor = loadstring(game:HttpGet('return Themes["' .. ThemeBackground:lower() .. '"]'))()
	else
		ThemeColor = Themes["red"]
	end
	
	local ThemeColor = ThemeColor
	----- [ Main Gui ] -----
	
	local Titles = {}
	local MaxPage = 0
	local RedGui = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local Frame2 = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local KillGui = Instance.new("TextButton")
	local Mini = Instance.new("TextButton")
	local Page = Instance.new("TextLabel")
	local Next = Instance.new("TextButton")
	local Back = Instance.new("TextButton")
	local FrameStorage = Instance.new("Folder", Frame2)
	local SelectedStorage = Instance.new("Folder", Frame2)
	
	FrameStorage.Name = "FrameStorage"
	
	SelectedStorage.Name = "SelectedStorage"
	
	
	RedGui.Name = "RedGui"
	RedGui.Parent = game.CoreGui
	
	Frame.Name = "Frame"
	Frame.Parent = RedGui
	Frame.BackgroundColor3 = ThemeColor.Drag
	Frame.BackgroundTransparency = 0.5
	Frame.BorderColor3 = ThemeColor.DragBorder
	Frame.BorderSizePixel = 2
	Frame.AnchorPoint = Vector2.new(0.5, 0.5)
	Frame.Position = UDim2.new(0.5, 0, 0.2, 0)
	Frame.Size = UDim2.new(0.1275, 0, 0.05, 0)
	Frame.Active = true
	Frame.Draggable = true
	Frame.Visible = true
	
	Frame2.Name = "Frame2"
	Frame2.Parent = Frame
	Frame2.BackgroundColor3 = ThemeColor.Frame
	Frame2.BackgroundTransparency = 0.5
	Frame2.BorderColor3 = ThemeColor.FrameBorder
	Frame2.BorderSizePixel = 2
	Frame2.AnchorPoint = Vector2.new(0.5, 0.5)
	Frame2.Position = UDim2.new(0.5, 0, 4.75, 0)
	Frame2.Size = UDim2.new(1, 0, 7.2, 0)
	Frame2.Active = false
	Frame2.Draggable = false
	Frame2.Visible = true
	
	TextLabel.Name = "Title"
	TextLabel.Parent = Frame
	TextLabel.Size = UDim2.new(0, 100, 0, 25)
	TextLabel.Position = UDim2.new(0, 25, 0, 0)
	TextLabel.Text = "Made by Red_BloxZ"
	TextLabel.TextColor3 = ThemeColor.Text
	TextLabel.Visible = true
	TextLabel.TextScaled = true
	TextLabel.BackgroundTransparency = 1
	
	KillGui.Name = "KillGui"
	KillGui.Parent = Frame
	KillGui.Size = UDim2.new(0, 25, 0, 25)
	KillGui.Position = UDim2.new(0, 0, 0, 0)
	KillGui.Text = "X"
	KillGui.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	KillGui.TextColor3 = ThemeColor.Close
	KillGui.TextScaled = true
	KillGui.Visible = true
	KillGui.BackgroundTransparency = 0.25
	KillGui.MouseButton1Click:Connect(function()
		RedGui:Destroy()
	end)
	
	Mini.Name = "Mini"
	Mini.Parent = Frame
	Mini.Size = UDim2.new(0, 25, 0, 25)
	Mini.Position = UDim2.new(0, 125, 0, 0)
	Mini.Text = "-"
	Mini.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Mini.TextColor3 = Color3.fromRGB(0, 0, 0)
	Mini.TextScaled = false
	Mini.TextSize = 27.5
	Mini.Visible = true
	Mini.BackgroundTransparency = 0.25
	Mini.MouseButton1Click:Connect(function()
		if Mini.Text == "-" then
			Mini.Text = "+"
			Frame2.Visible = false
		elseif Mini.Text == "+" then
			Mini.Text = "-"
			Frame2.Visible = true
		end
	end)
	
	Page.Name = "Page"
	Page.Parent = Frame2
	Page.Size = UDim2.new(0, 25, 0, 25)
	Page.Position = UDim2.new(0, 96, 0, 160)
	Page.Text = "1"
	Page.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Page.BorderColor3 = Color3.fromRGB(255, 255, 255)
	Page.BorderSizePixel = 2
	Page.TextColor3 = Color3.fromRGB(255, 255, 255)
	Page.TextSize = 20
	Page.Visible = false
	Page.TextScaled = true
	Page.BackgroundTransparency = 0.5
	
	Next.Name = "Next"
	Next.Parent = Page
	Next.Size = UDim2.new(0, 25, 0, 25)
	Next.Position = UDim2.new(0, 29, 0, 0)
	Next.Text = ">"
	Next.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
	Next.BorderColor3 = Color3.fromRGB(255, 255, 255)
	Next.BorderSizePixel = 2
	Next.TextColor3 = Color3.fromRGB(255, 255, 255)
	Next.TextScaled = true
	Next.TextSize = 20
	Next.Visible = true
	Next.BackgroundTransparency = 0.5
	Next.MouseButton1Click:Connect(function()
		for i,v in pairs(SelectedStorage:GetChildren()) do
			if v:IsA("ScrollingFrame") then
				v.Visible = false
			end
		end
		if tonumber(Page.Text) >= MaxPage - 1 then
			Page.Text = tostring(MaxPage)
			Next.Visible = false
			Back.Visible = true
			Page.Position = UDim2.new(0, 125, 0, 160)
			if Titles[tonumber(Page.Text)] then
				TextLabel.Text = Titles[tonumber(Page.Text)]
			else
				TextLabel.Text = "Made by Red_BloxZ"
			end
			if FrameStorage:FindFirstChild(Page.Text) then
				FrameStorage:FindFirstChild(Page.Text).Visible = true
			end
			if FrameStorage:FindFirstChild(tostring(tonumber(Page.Text) - 1)) then
				FrameStorage:FindFirstChild(tostring(tonumber(Page.Text) - 1)).Visible = false
			end
		else
			Page.Text = tostring(tonumber(Page.Text) + 1)
			Page.Position = UDim2.new(0, 96, 0, 160)
			Back.Visible = true
			if Titles[tonumber(Page.Text)] then
				TextLabel.Text = Titles[tonumber(Page.Text)]
			else
				TextLabel.Text = "Made by Red_BloxZ"
			end
			if FrameStorage:FindFirstChild(Page.Text) then
				FrameStorage:FindFirstChild(Page.Text).Visible = true
			end
			if FrameStorage:FindFirstChild(tostring(tonumber(Page.Text) - 1)) then
				FrameStorage:FindFirstChild(tostring(tonumber(Page.Text) - 1)).Visible = false
			end
		end
	end)
	
	Back.Name = "Back"
	Back.Parent = Page
	Back.Size = UDim2.new(0, 25, 0, 25)
	Back.Position = UDim2.new(0, -29, 0, 0)
	Back.Text = "<"
	Back.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Back.BorderColor3 = Color3.fromRGB(255, 255, 255)
	Back.BorderSizePixel = 2
	Back.TextColor3 = Color3.fromRGB(255, 255, 255)
	Back.TextScaled = true
	Back.TextSize = 20
	Back.Visible = false
	Back.BackgroundTransparency = 0.5
	Back.MouseButton1Click:Connect(function()
		for i,v in pairs(SelectedStorage:GetChildren()) do
			if v:IsA("ScrollingFrame") then
				v.Visible = false
			end
		end
		if tonumber(Page.Text) <= 2 then
			Page.Text = "1"
			Page.Position = UDim2.new(0, 96, 0, 160)
			Back.Visible = false
			Next.Visible = true
			if Titles[tonumber(Page.Text)] then
				TextLabel.Text = Titles[tonumber(Page.Text)]
			else
				TextLabel.Text = "Made by Red_BloxZ"
			end
			if FrameStorage:FindFirstChild(Page.Text) then
				FrameStorage:FindFirstChild(Page.Text).Visible = true
			end
			if FrameStorage:FindFirstChild(tostring(tonumber(Page.Text) + 1)) then
				FrameStorage:FindFirstChild(tostring(tonumber(Page.Text) + 1)).Visible = false
			end
		else
			Page.Text = tostring(tonumber(Page.Text) - 1)
			Page.Position = UDim2.new(0, 96, 0, 160)
			Next.Visible = true
			if Titles[tonumber(Page.Text)] then
				TextLabel.Text = Titles[tonumber(Page.Text)]
			else
				TextLabel.Text = "Made by Red_BloxZ"
			end
			if FrameStorage:FindFirstChild(Page.Text) then
				FrameStorage:FindFirstChild(Page.Text).Visible = true
			end
			if FrameStorage:FindFirstChild(tostring(tonumber(Page.Text) + 1)) then
				FrameStorage:FindFirstChild(tostring(tonumber(Page.Text) + 1)).Visible = false
			end
		end
	end)
	
	function createPage(TitleName)
		MaxPage = MaxPage + 1
		local newScrollFrame = Instance.new("ScrollingFrame", FrameStorage)
		local List = Instance.new("UIListLayout", newScrollFrame)
		local InvButtonOne = Instance.new("Frame", newScrollFrame)
		
		curFrame = newScrollFrame
		
		if TitleName == nil then
			addTitle("Made by Red_BloxZ")
		else
			addTitle(TitleName)
		end
		
		newScrollFrame.Name = tostring(MaxPage)
		newScrollFrame.BorderSizePixel = 0
		newScrollFrame.BackgroundTransparency = 1
		newScrollFrame.Size = UDim2.new(0, 150, 0, 155)
		newScrollFrame.Active = true
		newScrollFrame.Visible = false
		newScrollFrame.ScrollBarThickness = 0
		newScrollFrame.ElasticBehavior = Enum.ElasticBehavior.Never
		newScrollFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always
		newScrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
		newScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
		
		List.Padding = UDim.new(0, 10)
		List.FillDirection = Enum.FillDirection.Vertical
		List.HorizontalAlignment = Enum.HorizontalAlignment.Center
		List.SortOrder = Enum.SortOrder.LayoutOrder
		
		InvButtonOne.Name = "Inv Button 1"
		InvButtonOne.Size = UDim2.new(0, 0, 0, 0)
		InvButtonOne.BorderSizePixel = 0
		InvButtonOne.BackgroundTransparency = 1
		
		return newScrollFrame
	end
	
	function addTitle(Text)
		table.insert(Titles, Text)
		TextLabel.Text = Titles[1]
	end
	
	function addButton(Text, callback)
		local newButton = Instance.new("TextButton", curFrame)
		MakeInvButton(curFrame)
		newButton.Name = Text
		newButton.Size = UDim2.new(0, 125, 0, 25)
		newButton.Text = Text
		newButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		newButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
		newButton.BorderSizePixel = 2
		newButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		newButton.TextScaled = true
		newButton.BackgroundTransparency = 0.5
		newButton.MouseButton1Click:Connect(callback)
		
		return newButton
	end
	
	function addTextLabel(Text)
		local newTextLabel = Instance.new("TextLabel", curFrame)
		MakeInvButton(curFrame)
		newTextLabel.Name = Text
		newTextLabel.Size = UDim2.new(0, 125, 0, 25)
		newTextLabel.Text = Text
		newTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		newTextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		newTextLabel.BorderSizePixel = 2
		newTextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
		newTextLabel.TextScaled = true
		newTextLabel.Active = false
		newTextLabel.BackgroundTransparency = 0.5
		
		return newTextLabel
	end
	
	function addTextBox(Text, holderText)
		local newTextBox = Instance.new("TextBox", curFrame)
		MakeInvButton(curFrame)
		newTextBox.Name = Text
		newTextBox.Size = UDim2.new(0, 125, 0, 25)
		newTextBox.Text = Text
		newTextBox.PlaceholderText = holderText
		newTextBox.PlaceholderColor3 = Color3.fromRGB(200, 200, 200)
		newTextBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		newTextBox.BorderColor3 = Color3.fromRGB(255, 255, 255)
		newTextBox.BorderSizePixel = 2
		newTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		newTextBox.TextScaled = true
		newTextBox.BackgroundTransparency = 0.5
	
		return newTextBox
	end
	
	function addToggle(buttonText, callback, delay)
		if delay == nil then
			local newToggleButton = Instance.new("TextButton", curFrame)
			MakeInvButton(curFrame)
			newToggleButton.Name = buttonText
			newToggleButton.Size = UDim2.new(0, 125, 0, 25)
			newToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			newToggleButton.Text = buttonText .. " (Off)"
			newToggleButton.TextScaled = true
			newToggleButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
			newToggleButton.BorderSizePixel = 2
			newToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			newToggleButton.TextScaled = true
			newToggleButton.BackgroundTransparency = 0.5
			newToggleButton.MouseButton1Click:Connect(function()
				if newToggleButton.Text == buttonText .. " (Off)" then
					newToggleButton.Text = buttonText .. " (On)"
					newToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
					repeat wait()
						pcall(callback)
					until newToggleButton.Text == buttonText .. " (Off)" or RedGui.Parent == nil
				elseif newToggleButton.Text == buttonText .. " (On)" then
					newToggleButton.Text = buttonText .. " (Off)"
					newToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
				end
			end)
			return newToggleButton
		else
			local ButtonFrame = Instance.new("Frame", curFrame)
			local newToggleButton = Instance.new("TextButton", ButtonFrame)
			local SettingButton = Instance.new("TextButton", newToggleButton)
			local delayNum = Instance.new("TextBox", newToggleButton)
			MakeInvButton(curFrame)
			ButtonFrame.Name = buttonText .. "ButtonFrame"
			ButtonFrame.Size = UDim2.new(0, 125, 0, 25)
			ButtonFrame.BackgroundTransparency = 1
			
			newToggleButton.Name = buttonText
			newToggleButton.Size = UDim2.new(0, 96, 0, 25)
			newToggleButton.Text = buttonText .. " (Off)"
			newToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			newToggleButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
			newToggleButton.BorderSizePixel = 2
			newToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			newToggleButton.TextScaled = true
			newToggleButton.BackgroundTransparency = 0.5
			newToggleButton.MouseButton1Click:Connect(function()
				if newToggleButton.Text == buttonText .. " (Off)" then
					newToggleButton.Text = buttonText .. " (On)"
					newToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
					repeat wait(delayNum.Text)
						pcall(callback)
					until newToggleButton.Text == buttonText .. " (Off)" or RedGui.Parent == nil
				elseif newToggleButton.Text == buttonText .. " (On)" then
					newToggleButton.Text = buttonText .. " (Off)"
					newToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
				end
			end)
			
			SettingButton.Name = "SettingButton"
			SettingButton.Size = UDim2.new(0, 25, 0, 25)
			SettingButton.Position = UDim2.new(0, 100, 0, 0)
			SettingButton.Text = "⚙️"
			SettingButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			SettingButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
			SettingButton.BorderSizePixel = 2
			SettingButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			SettingButton.TextScaled = true
			SettingButton.TextSize = 20
			SettingButton.Visible = true
			SettingButton.BackgroundTransparency = 0.5
			SettingButton.MouseButton1Up:Connect(function()
				if SettingButton.BackgroundColor3 == Color3.fromRGB(0, 0, 0) then
					SettingButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
					delayNum.Visible = true
				elseif SettingButton.BackgroundColor3 == Color3.fromRGB(255, 0, 0) then
					SettingButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
					delayNum.Visible = false
				end
			end)
			
			delayNum.Name = "delayNum"
			delayNum.Size = UDim2.new(0, 96, 0, 25)
			delayNum.Position = UDim2.new(0, 0, 0, 0)
			delayNum.Text = delay
			delayNum.ClearTextOnFocus = true
			delayNum.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			delayNum.BorderColor3 = Color3.fromRGB(0, 0, 0)
			delayNum.BorderSizePixel = 2
			delayNum.TextColor3 = Color3.fromRGB(0, 0, 0)
			delayNum.TextSize = 20
			delayNum.Visible = false
			delayNum.TextScaled = true
			delayNum.BackgroundTransparency = 0.5
			delayNum.PlaceholderText = "delay"
			delayNum.PlaceholderColor3 = Color3.fromRGB(0, 0, 0)
			
			return newToggleButton
		end
	end
	
	function addSelected(Text)
		local newSelectedButton = Instance.new("TextButton", curFrame)
		MakeInvButton(curFrame)
		local newSelectedFrame = Instance.new("ScrollingFrame", SelectedStorage)
		local List = Instance.new("UIListLayout", newSelectedFrame)
		local InvButtonOne = Instance.new("Frame", newSelectedFrame)
		
		local ReturnThings = {
			Frame = newSelectedFrame,
			Button = newSelectedButton
		}
		
		_G.curSelected = newSelectedFrame
		_G.curSelectedButton = newSelectedButton
		
		InvButtonOne.Name = "Inv Button 1"
		InvButtonOne.Size = UDim2.new(0, 0, 0, 0)
		InvButtonOne.BorderSizePixel = 0
		InvButtonOne.BackgroundTransparency = 1
		
		List.Padding = UDim.new(0, 10)
		List.FillDirection = Enum.FillDirection.Vertical
		List.HorizontalAlignment = Enum.HorizontalAlignment.Center
		List.SortOrder = Enum.SortOrder.LayoutOrder
		
		newSelectedFrame.Name = #SelectedStorage:GetChildren()
		newSelectedFrame.BorderSizePixel = 2
		newSelectedFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
		newSelectedFrame.BackgroundTransparency = 0.5
		newSelectedFrame.BackgroundColor3 = Color3.new(0, 0, 0)
		newSelectedFrame.Size = UDim2.new(0, 150, 0, 185)
		newSelectedFrame.Position = UDim2.new(0, 155, 0, 0)
		newSelectedFrame.Active = true
		newSelectedFrame.Visible = false
		newSelectedFrame.ScrollBarThickness = 0
		newSelectedFrame.ElasticBehavior = Enum.ElasticBehavior.Never
		newSelectedFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always
		newSelectedFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
		newSelectedFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
		
		newSelectedButton.Name = Text
		newSelectedButton.Size = UDim2.new(0, 125, 0, 25)
		newSelectedButton.Text = Text
		newSelectedButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		newSelectedButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
		newSelectedButton.BorderSizePixel = 2
		newSelectedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		newSelectedButton.TextScaled = true
		newSelectedButton.BackgroundTransparency = 0.5
		newSelectedButton.MouseButton1Click:Connect(function()
			for i,v in pairs(SelectedStorage:GetChildren()) do
				if v:IsA("ScrollingFrame") and v.Visible == true and v ~= newSelectedFrame then
					v.Visible = false
				end
			end
			newSelectedFrame.Visible = not newSelectedFrame.Visible
		end)
		
		return ReturnThings
	end
	
	function addToggleSelect(Table, Name, currentButton)
		if Table[Name] == true then
			buttonColor = Color3.new(0, 1, 0)
		elseif Table[Name] == false then
			buttonColor = Color3.new(1, 0, 0)
		end
		if currentButton == nil then
			curButton = _G.curSelectedButton
			curFrame = _G.curSelected
		elseif currentButton ~= nil then
			curButton = currentButton.Button
			curFrame = currentButton.Frame
		end
		local buttonColor = buttonColor
		local curFrame = curFrame
		local curButton = curButton
		local newToggleSelect = Instance.new("TextButton", curFrame)
		MakeInvButton(curFrame)
		newToggleSelect.Name = Name
		newToggleSelect.Size = UDim2.new(0, 125, 0, 25)
		newToggleSelect.Text = Name
		newToggleSelect.BackgroundColor3 = buttonColor
		newToggleSelect.BorderColor3 = Color3.fromRGB(255, 255, 255)
		newToggleSelect.BorderSizePixel = 2
		newToggleSelect.TextColor3 = Color3.fromRGB(255, 255, 255)
		newToggleSelect.TextScaled = true
		newToggleSelect.BackgroundTransparency = 0.5
		newToggleSelect.MouseButton1Click:Connect(function()
			if Table[Name] == true then
				Table[Name] = false
				newToggleSelect.BackgroundColor3 = Color3.new(1, 0, 0)
			elseif Table[Name] == false then
				Table[Name] = true
				newToggleSelect.BackgroundColor3 = Color3.new(0, 1, 0)
			end
		end)
		
		return newToggleSelect
	end
	
	function addClickSelect(Text, currentButton)
		if currentButton == nil then
			curButton = _G.curSelectedButton
			curFrame = _G.curSelected
		elseif currentButton ~= nil then
			curButton = currentButton.Button
			curFrame = currentButton.Frame
		end
		local curFrame = curFrame
		local curButton = curButton
		local newClickSelect = Instance.new("TextButton", curFrame)
		MakeInvButton(curFrame)
		newClickSelect.Name = Text
		newClickSelect.Size = UDim2.new(0, 125, 0, 25)
		newClickSelect.Text = Text
		newClickSelect.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		newClickSelect.BorderColor3 = Color3.fromRGB(255, 255, 255)
		newClickSelect.BorderSizePixel = 2
		newClickSelect.TextColor3 = Color3.fromRGB(255, 255, 255)
		newClickSelect.TextScaled = true
		newClickSelect.BackgroundTransparency = 0.5
		newClickSelect.MouseButton1Click:Connect(function()
			curButton.Text = Text
		end)
		
		return newClickSelect
	end
	
	function MakeInvButton(frame)
		if frame:FindFirstChild("Inv Button 2") then
			frame:FindFirstChild("Inv Button 2"):Destroy()
		end
		local InvButtonTwo = Instance.new("Frame", frame)
		InvButtonTwo.Name = "Inv Button 2"
		InvButtonTwo.Size = UDim2.new(0, 0, 0, 0)
		InvButtonTwo.BorderSizePixel = 0
		InvButtonTwo.BackgroundTransparency = 1
	end
	
	--- [ Gui Script ] ---
	spawn(function() FrameStorage:WaitForChild("1").Visible = true end)
	
	spawn(function()
		repeat wait(1)
			pcall(function()
				if #FrameStorage:GetChildren() <= 1 then
					Page.Visible = false
				else
					Page.Visible = true
				end
			end)
		until RedGui.Parent == nil
	end)
end
